<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <li>scraped_present->dando uma olhada</li>
    <li>scraped_present->saltando</li>
    <li>scraped_present->pastando</li>
    <li>scraped_present->carambolando</li>
    <li>scraped_present->pulando</li>
    <li>scraped_present->patinando</li>
    <li>scraped_past->deu uma olhada</li>
    <li>scraped_past->saltou</li>
    <li>scraped_past->pastou</li>
    <li>scraped_past->carambolou</li>
    <li>scraped_past->pulou</li>
    <li>scraped_past->patinou</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</li>
    <li>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</li>
    <li>towardsat->towards</li>
    <li>towardsat->at</li>
    <li>verb_genericattack->swung</li>
    <li>verb_genericattack->flailed</li>
    <li>verb_genericattack->thrashed</li>
    <li>tried->tried</li>
    <li>tried->attempted</li>
  -->
  <Combat_FailIncludes.rulePack.rulesStrings>
    <li>action->[INITIATOR_definite] [tried] para [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] para [damaged_inf] [RECIPIENT_definite] com [implement]</li>
    <li>action->[INITIATOR_definite] [tried] usar [implement] para [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] balançou seu(ua) [WEAPON_label] em [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] com [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] com [implement]</li>
    <li>towardsat->em direção</li>
    <li>towardsat->em</li>
    <li>verb_genericattack->balançou</li>
    <li>verb_genericattack->agitou</li>
    <li>verb_genericattack->bateu</li>
    <li>tried->tentou</li>
    <li>tried->tentou</li>
  </Combat_FailIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]</li>
    <li>strikeAdv->painfully</li>
    <li>strikeAdv->horribly</li>
    <li>strikeAdv->savagely</li>
    <li>strikeAdv->viciously</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</li>
    <li>flavortext_consequence->leaving a horrific wound</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</li>
  -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings>
    <li>result(p=1)->[damaged_present] seu(ua) [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] seu(ua) [targetlist] [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] seu(ua) [targetlist] [strikeAdv]</li>
    <li>strikeAdv->dolorosamente</li>
    <li>strikeAdv->penosamente</li>
    <li>strikeAdv->brutalmente</li>
    <li>strikeAdv->horrivelmente</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando uma ferida nojenta</li>
    <li>flavortext_consequence->deixando uma ferida horrível</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->fazendo [RECIPIENT_pronoun] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->deixando [RECIPIENT_pronoun] sem equilíbrio</li>
  </Combat_MeleeDamageIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(priority=-10)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->wounding</li>
    <li>damaged_present(deflected!=True)->injuring</li>
    <li>destroyed(p=0.5)->destroyed</li>
    <li>destroyed(p=0.5)->demolished</li>
    <li>destroyed(p=0.5)->ruined</li>
    <li>destroyed(p=0.5)->wrecked</li>
    <li>wince(recipient_flesh==Normal)->wince</li>
    <li>wince(recipient_flesh==Normal)->grimace</li>
    <li>wince(recipient_flesh==Normal)->cringe</li>
    <li>wince(recipient_flesh==Normal)->groan</li>
    <li>wince(recipient_flesh!=Mechanoid)->scream</li>
    <li>wince(recipient_flesh!=Mechanoid)->shout</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</li>
    <li>painevent(recipient_flesh==Normal)->with misery</li>
    <li>painevent->from the injury</li>
    <li>painevent->from the wound</li>
    <li>to->to</li>
    <li>to->into</li>
  -->
  <Combat_MeleeIncludes.rulePack.rulesStrings>
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(priority=-10)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->seu(ua) de [TOOL_label] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->seu(ua) [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->um [TOOL_label] de [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->um [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->seu(ua) [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->seu(ua) [TOOL_label] de [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->seu(ua) [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->seu(ua) [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] e [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], e [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], e [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->lesionando</li>
    <li>damaged_present(deflected!=True)->ferindo</li>
    <li>destroyed(p=0.5)->destruído</li>
    <li>destroyed(p=0.5)->demolido</li>
    <li>destroyed(p=0.5)->arruinado</li>
    <li>destroyed(p=0.5)->quebrado</li>
    <li>wince(recipient_flesh==Normal)->estremecer</li>
    <li>wince(recipient_flesh==Normal)->careta</li>
    <li>wince(recipient_flesh==Normal)->vergonhoso</li>
    <li>wince(recipient_flesh==Normal)->murmúrio</li>
    <li>wince(recipient_flesh!=Mechanoid)->grito</li>
    <li>wince(recipient_flesh!=Mechanoid)->berro</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] dor</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agonia</li>
    <li>painevent(recipient_flesh==Normal)->com miséria</li>
    <li>painevent->da lesão</li>
    <li>painevent->da ferida</li>
    <li>to->para</li>
    <li>to->em</li>
  </Combat_MeleeIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->wielding</li>
    <li>wielding(p=3)->using</li>
    <li>wielding(p=2)->handling</li>
    <li>wielding->brandishing</li>
    <li>wielding->manipulating</li>
    <li>using(p=4)->using</li>
    <li>using->driving</li>
    <li>using->thrusting</li>
    <li>using->utilizing</li>
    <li>using->moving</li>
    <li>skillAdv(INITIATOR_skill<=3)->incompetently</li>
    <li>skillAdv(INITIATOR_skill<=3)->ineptly</li>
    <li>skillAdv(INITIATOR_skill<=3)->wildly</li>
    <li>skillAdv(INITIATOR_skill<=3)->randomly</li>
    <li>skillAdv(INITIATOR_skill<=3)->flailingly</li>
    <li>skillAdv(INITIATOR_skill<=4)->awkwardly</li>
    <li>skillAdv(INITIATOR_skill<=4)->clumsily</li>
    <li>skillAdv(INITIATOR_skill<=5)->fearfully</li>
    <li>skillAdv(INITIATOR_skill<=5)->falteringly</li>
    <li>skillAdv(INITIATOR_skill<=5)->foolishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->hesitantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->reluctantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->slowly</li>
    <li>skillAdv(INITIATOR_skill<=6)->tentatively</li>
    <li>skillAdv(INITIATOR_skill<=6)->inexpertly</li>
    <li>skillAdv(INITIATOR_skill<=6)->amateurishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->timidly</li>
    <li>skillAdv(INITIATOR_skill<=8)->enthusiastically</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently</li>
    <li>skillAdv(INITIATOR_skill>=8)->professionally</li>
    <li>skillAdv(INITIATOR_skill>=8)->deftly</li>
    <li>skillAdv(INITIATOR_skill>=8)->aptly</li>
    <li>skillAdv(INITIATOR_skill>=8)->cleverly</li>
    <li>skillAdv(INITIATOR_skill>=8)->dexterously</li>
    <li>skillAdv(INITIATOR_skill>=8)->skillfully</li>
    <li>skillAdv(INITIATOR_skill>=10)->adeptly</li>
    <li>skillAdv(INITIATOR_skill>=10)->slickly</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertly</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisely</li>
    <li>skillAdv(INITIATOR_skill>=14)->masterfully</li>
    <li>skillAdv(INITIATOR_skill>=16)->artistically</li>
    <li>skillAdv(INITIATOR_skill>=16)->gracefully</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mechanically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robotically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directly</li>
  -->
  <Combat_SkillIncludes.rulePack.rulesStrings>
    <li>skillDescMelee->[wielding] seu(ua) [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->empunhando</li>
    <li>wielding(p=3)->usando</li>
    <li>wielding(p=2)->manejando</li>
    <li>wielding->brandindo</li>
    <li>wielding->manipulando</li>
    <li>using(p=4)->usando</li>
    <li>using->conduzindo</li>
    <li>using->empurrando</li>
    <li>using->utilizando</li>
    <li>using->movendo</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->incompetentemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->ineptamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->descontroladamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->aleatoriamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=3)->instavelmente</li>
    <li>skillAdv(INITIATOR_skill&lt;=4)->estranhamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=4)->desajeitadamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->medrosamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->vacilantemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=5)->tolamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->hesitantemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->relutantemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->lentamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->provisoriamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->Inexperientemente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->amadoramente</li>
    <li>skillAdv(INITIATOR_skill&lt;=6)->timidamente</li>
    <li>skillAdv(INITIATOR_skill&lt;=8)->entusiasticamente</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill&lt;=10)->proficientemente</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill&lt;=10)->competentemente</li>
    <li>skillAdv(INITIATOR_skill>=8)->profissionalmente</li>
    <li>skillAdv(INITIATOR_skill>=8)->habilmente</li>
    <li>skillAdv(INITIATOR_skill>=8)->apropriadamente</li>
    <li>skillAdv(INITIATOR_skill>=8)->inteligentemente</li>
    <li>skillAdv(INITIATOR_skill>=8)->habilmente</li>
    <li>skillAdv(INITIATOR_skill>=8)->habilidosamente</li>
    <li>skillAdv(INITIATOR_skill>=10)->habilmente</li>
    <li>skillAdv(INITIATOR_skill>=10)->habilidosamente</li>
    <li>skillAdv(INITIATOR_skill>=12)->habilmente</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisamente</li>
    <li>skillAdv(INITIATOR_skill>=14)->magistralmente</li>
    <li>skillAdv(INITIATOR_skill>=16)->artisticamente</li>
    <li>skillAdv(INITIATOR_skill>=16)->graciosamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mecanicamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->roboticamente</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->diretamente</li>
  </Combat_SkillIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]</li>
  -->
  <Combat_WoundIncludes.rulePack.rulesStrings>
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] e [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], e [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], e [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] e [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], e [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], e [recipient_part_damaged3_label]</li>
  </Combat_WoundIncludes.rulePack.rulesStrings>
  
</LanguageData>